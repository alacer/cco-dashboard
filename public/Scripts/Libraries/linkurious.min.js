/* linkurious.js - A high-level JavaScript library dedicated to graph visualization and interaction. - Version: 1.0.0 - Author: Linkurious SAS - License: all rights reserved */
(function () {
    "use strict";
    var a = function (b) {
        var c = b || {};
        this.graph = new a.classes.graph(c.container, c.settings), this.camera = new a.classes.camera(this.graph).initZoom(), this.ui = new a.classes.ui(this.graph, this.camera), a.misc.bindEvents(this.graph)
    };
    if ("undefined" != typeof this.linkurious)throw"An object called linkurious is already in the global scope.";
    "undefined" != typeof exports ? ("undefined" != typeof module && module.exports && (exports = module.exports = a), exports.linkurious = a) : this.linkurious = a
}).call(this), function () {
    "use strict";
    if ("undefined" == typeof linkurious)throw"linkurious is not declared";
    var a = this;
    linkurious.utils = linkurious.utils || {}, linkurious.utils.pkg = function (b) {
        return(b || "").split(".").reduce(function (a, b) {
            return b in a ? a[b] : a[b] = {}
        }, a)
    }
}.call(this), function () {
    "use strict";
    if ("undefined" == typeof linkurious)throw"linkurious is not declared";
    linkurious.utils.pkg("linkurious.utils"), linkurious.utils.dom = function () {
        this.$ = function (a) {
            return document.getElementById(a)
        }, this.all = function (a) {
            return document.querySelectorAll(a)
        }, this.click = function (a, b) {
            for (var c = document.querySelectorAll(a), d = c.length, e = 0; d > e; e++) {
                var f = c[e];
                f.onclick = b
            }
        }, this.removeNode = function (a) {
            a.parentNode.removeChild(a)
        }, this.removeAllNodes = function (a) {
            var b = a.length;
            for (i = 0; b > i; i++)removeNode(a[i])
        }, this.removeAll = function (a) {
            var b = document.querySelectorAll(a);
            removeAllNodes(b)
        }, this.show = function (a) {
            var b = document.querySelectorAll(a), c = b.length;
            for (i = 0; c > i; i++) {
                var d = b[i];
                d.style.display = ""
            }
        }, this.hide = function (a) {
            var b = document.querySelectorAll(a), c = b.length;
            for (i = 0; c > i; i++) {
                var d = b[i];
                d.style.display = "none"
            }
        }, this.toggle = function (a) {
            var b = document.querySelectorAll(a), c = b.length;
            for (i = 0; c > i; i++) {
                var d = b[i];
                d.style.display = "none" != d.style.display ? "none" : ""
            }
        }, this.fadeIn = function (a) {
            var b = document.querySelectorAll(a), c = b.length;
            for (i = 0; c > i; i++) {
                var d = b[i];
                d.style.display = "", d.className.match(/(?:^|\s)fade(?!\S)/) || (d.className += " fader"), d.style.visibility = "visible", d.style.opacity = 1
            }
        }, this.fadeOut = function (a) {
            var b = document.querySelectorAll(a), c = b.length;
            for (i = 0; c > i; i++) {
                var d = b[i];
                d.style.visibility = "hidden", d.style.opacity = 0
            }
        }
    }
}.call(this), function () {
    "use strict";
    var a = function () {
        Object.defineProperty(this, "_handlers", {value: {}})
    };
    a.prototype.bind = function (a, b) {
        var c, d, e;
        if (1 === arguments.length && "object" == typeof arguments[0])for (a in arguments[0])this.bind(a, arguments[0][a]); else {
            if (2 !== arguments.length || "function" != typeof arguments[1])throw"bind: Wrong arguments.";
            e = "string" == typeof a ? a.split(" ") : a;
            for (c in e)d = e[c], d && (this._handlers[d] || (this._handlers[d] = []), this._handlers[d].push({handler: b}))
        }
        return this
    }, a.prototype.unbind = function (a, b) {
        var c, d, e, f, g = "string" == typeof a ? a.split(" ") : a;
        if (!arguments.length) {
            for (c in this._handlers)delete this._handlers[c];
            return this
        }
        if (b)for (c in g) {
            if (f = g[c], this._handlers[f]) {
                e = [];
                for (d in this._handlers[f])this._handlers[f][d].handler !== b && e.push(this._handlers[f][d]);
                this._handlers[f] = e
            }
            this._handlers[f] && 0 === this._handlers[f].length && delete this._handlers[f]
        } else for (c in g)delete this._handlers[g[c]];
        return this
    }, a.prototype.dispatchEvent = function (a, b) {
        var c, d, e, f, g, h = this, i = "string" == typeof a ? a.split(" ") : a;
        b = void 0 === b ? {} : b;
        for (c in i)if (g = i[c], this._handlers[g]) {
            f = h.getEvent(g, b), e = [];
            for (d in this._handlers[g])this._handlers[g][d].handler(f), this._handlers[g][d].one || e.push(this._handlers[g][d]);
            this._handlers[g] = e
        }
        return this
    }, a.prototype.getEvent = function (a, b) {
        return{type: a, data: b || {}, target: this}
    }, a.extend = function (b, c) {
        var d;
        for (d in a.prototype)a.prototype.hasOwnProperty(d) && (b[d] = a.prototype[d]);
        a.apply(b, c)
    }, "undefined" != typeof this.linkurious ? (this.linkurious.classes = this.linkurious.classes || {}, this.linkurious.classes.dispatcher = a) : "undefined" != typeof exports ? ("undefined" != typeof module && module.exports && (exports = module.exports = a), exports.dispatcher = a) : this.dispatcher = a
}.call(this), function (a) {
    "use strict";
    var b = !1, c = function (c, d) {
        linkurious.classes.dispatcher.extend(this);
        var e = this;
        this.container = c, this.p = {configProperties: _.extend({drawHoverEdges: !0}, d.configProperties), drawingProperties: _.extend({labelColor: "node", defaultLabelColor: "#333", labelSize: "proportional", defaultLabelSize: 13, labelSizeRatio: 1.5, defaultLabelBGColor: "#fff", defaultLabelHoverColor: "#fff", defaultHoverLabelBGColor: "#333", defaultLabelActiveColor: "#fff", defaultActiveLabelBGColor: "#333", labelThreshold: 9, labelPosition: "center", font: "YanoneKaffeesatzRegular", hoverFont: "YanoneKaffeesatzRegular", hoverFontStyle: "normal", activeFontStyle: "normal", edgeLabelThreshold: 5, edgeLabelSize: "proportional", edgeLabelSizeRatio: 1, edgeLabelColor: "default", edgeHoverLabelColor: "default", edgeHoverLabelBGColor: "default", defaultEdgeLabelColor: "#333", defaultEdgeLabelBGColor: "rgba(255,255,255,0)", defaultEdgeHoverLabelColor: "#333", defaultEdgeHoverLabelBGColor: "rgba(255,255,255,0)", edgeFont: "YanoneKaffeesatzRegular", edgeHoverFont: "YanoneKaffeesatzRegular", edgeHoverFontStyle: "normal", edgeActiveFontStyle: "normal", defaultEdgeType: "line", edgeColor: "default", defaultEdgeColor: "#a9a9a9", edgeHoverSizeRatio: 1, edgeHoverColor: "default", defaultEdgeHoverColor: "#333", borderSize: 2, defaultNodeColor: "#333", nodeBorderColor: "default", defaultNodeBorderColor: "#333"}, d.drawingProperties), graphProperties: _.extend({minNodeSize: .1, maxNodeSize: 2, minEdgeSize: .2, maxEdgeSize: .6, scalingMode: "outside", nodesPowRatio: 1, edgesPowRatio: 1, arrowRatio: 1.5, safe: !1}, d.graphProperties), mouseProperties: _.extend({minRatio: 1, maxRatio: 128, zoomDelta: .1, dragDelta: .2, zoomMultiply: 1.382}, d.mouseProperties), nodeColorIndex: _.extend({}, d.nodeColorIndex), nameList: _.uniq(_.union(["text", "name"], d.nameList)), imageList: _.uniq(_.union(["icon", "image"], d.imageList)), nodeSizeList: _.uniq(_.union([], d.nodeSizeList)), edgeSizeList: _.uniq(_.union([], d.edgeSizeList)), nodeFadingList: _.uniq(_.union([], d.nodeFadingList))}, _.each(e.p.nodeColorIndex, function (a) {
            a.scale = chroma.scale([a.color, "#ddd"])
        }), this.activeNodes = [], this.activeEdges = [], this.fixedNodes = [], this.focusNode, this.defaultNodeColor = this.p.drawingProperties.defaultNodeColor, this.defaultEdgeColor = this.p.drawingProperties.defaultEdgeColor, this.activeEdgeColor = this.p.drawingProperties.defaultEdgeHoverColor, this.hiddenEdgeColor = "rgba(255,255,255,0.3)", this.isLayoutRunning = !1, this.minWeight, this.minEdgeSize = this.p.graphProperties.minEdgeSize, this.standardEdgeSize = this.p.graphProperties.maxEdgeSize, this.maxEdgeSize = 1, this.s = sigma.init(document.getElementById(c)).configProperties(e.p.configProperties).drawingProperties(e.p.drawingProperties).graphProperties(e.p.graphProperties).mouseProperties(e.p.mouseProperties), "startNodeShapes"in this.s ? this.s.startNodeShapes && this.s.startNodeShapes() : b && console.log("Sigma.js NodeShapes plugin not found. Can't display shapes and images.");
        var f = new RegExp(".(jpg|png|bmp|jpeg|tiff|gif)$");
        this.clear = function () {
            return e.activeNodes = [], e.s.emptyGraph(), g(), e
        }, this.getNodeObject = function (a) {
            return e.s._core.graph.nodesIndex[a]
        }, this.getEdgeObject = function (a) {
            return e.s._core.graph.edgesIndex[a]
        }, this.getAllNodesId = function () {
            return _.map(e.s._core.graph.nodes, function (a) {
                return a.id
            })
        }, this.setFocusNode = function (a) {
            e.focusNode = a
        }, this.resetFocusNode = function () {
            e.focusNode = null
        }, this.getGraphSize = function () {
            return e.s._core.graph.nodes.length
        }, this.getGraphEdgeSize = function () {
            return e.s._core.graph.edges.length
        }, this.getNeighbors = function (a) {
            var b = {};
            return e.s.iterEdges(function (c) {
                c.source.id == a ? b[c.target.id] = 1 : c.target.id == a && (b[c.source.id] = 1)
            }), Object.keys(b)
        }, this.getAdjacentEdges = function (a) {
            var b = {};
            return e.s.iterEdges(function (c) {
                (c.source.id == a || c.target.id == a) && (b[c.id] = 1)
            }), Object.keys(b)
        }, this.addNode = function (b, c, d) {
            ("undefined" === b || null === b) && (b = c ? JSON.stringify(c.data).hashCode() : JSON.stringify("").hashCode());
            var g = 1, h = 1;
            if (c && c.x && c.y)g = c.x, h = c.y; else if (e.focusNode in e.s._core.graph.nodesIndex) {
                var i = e.s._core.graph.nodesIndex[e.focusNode], j = Math.random();
                g = i.x + .1 * Math.cos(Math.PI * j), h = i.y + .1 * Math.sin(Math.PI * j)
            } else if (e.activeNodes.length) {
                var i = e.s._core.graph.nodesIndex[e.activeNodes[0]], j = Math.random();
                g = i.x + .1 * Math.cos(Math.PI * j), h = i.y + .1 * Math.sin(Math.PI * j)
            } else if (e.s._core.graph.nodes.length) {
                var i = e.s._core.graph.nodes[0];
                g = i.x, h = i.y + Math.random()
            }
            var k = "", l = [];
            if (c && "data"in c) {
                $.each(c.data, function (a, b) {
                    a = $.trim(a), b = $.trim(b), l.push({attr: a, val: b})
                });
                var m = Object.keys(c.data), n = _.find(e.p.nameList, function (a) {
                    return _.contains(m, a)
                });
                n === a ? (k = "", _.size(c.data) && (k = c.data[_.keys(c.data)[0]])) : k = c.data[n]
            }
            var o = {label: k, x: g, y: h, size: c && c.size ? c.size : 1, color: c && c.color ? c.color : e.defaultNodeColor, image: c ? c.image : a, attributes: l};
            "labels"in c && (o.neo4j_labels = c.labels, _.each(c.labels, function (b) {
                if (b in e.p.nodeColorIndex) {
                    o.color = e.p.nodeColorIndex[b].color;
                    var d = _.find(e.p.nodeFadingList, function (a) {
                        return _.contains(m, a)
                    });
                    if (d !== a) {
                        var f = 1 - parseFloat(c.data[d]);
                        o.color = e.p.nodeColorIndex[b].scale(f).hex()
                    }
                }
            }));
            var p = _.find(e.p.nodeSizeList, function (a) {
                return _.contains(m, a)
            });
            p !== a && (o.size = c.data[p]);
            var n = _.find(e.p.imageList, function (a) {
                return _.contains(m, a)
            });
            return n !== a && f.test(c.data[n]) && (o.image = {url: c.data[n], scale: 1.6}), e.getGraphSize() || e.fixedNodes.push(b), e.s.addNode(b, o), e.isLayoutRunning || e.startLayout("graph"), d || (e.s.draw(2, 1, 2), e.dispatchEvent("graphchange", {what: "node"})), e
        }, this.addEdge = function (c, d, f, h, i) {
            if (("undefined" === c || null === c) && (c = JSON.stringify({source: d, target: f, label: h.label}).hashCode()), "undefined" === d)return void(b && console.log("Added edge must have a sourceid."));
            if ("undefined" === f)return void(b && console.log("Added edge must have a targetid."));
            var j = e.getEdgeObject(c);
            if (j == a) {
                var k = {id: c, label: h && "label"in h ? h.label : ""};
                h && "type"in h && (("line" === h.type || "curve" === h.type) && (k.type = h.type), delete h.type);
                var l = Object.keys(h || {}), m = _.find(e.p.edgeSizeList, function (a) {
                    return _.contains(l, a)
                });
                if (m !== a) {
                    var n = parseFloat(h[m]);
                    k.size = isNaN(n) ? _.size(h[m]) : n
                }
                for (var o in h)if (!k[o])if ("attributes" == o)for (var p in h[o])k[p] = h[o][p] || ""; else k[o] = h[o] || "";
                return e.s.addEdge(c, d, f, k), i || (e.s.draw(-1, 1, -1), g()), e
            }
        };
        var g = _.debounce(function () {
            e.dispatchEvent("graphchange")
        }, 0);
        this.hideNodes = function (a) {
            return a.forEach(function (a) {
                e.getNodeObject(a);
                e.focusNode == a && e.resetFocusNode(), e.s.dropNode(a)
            }), g(), e
        }, this.hideEdges = function (a) {
            return a.forEach(function (a) {
                e.getEdgeObject(a);
                e.s.dropEdge(a)
            }), g(), e
        }, this.selectNodes = function (a) {
            if (b && console.log("selectNodes"), 1 == a.length)e.selectNode(a[0], !1); else if (a.length) {
                e.resetFocusNode(), a = _.uniq(a.sort(), !0), e.activeNodes.forEach(function (a) {
                    var b = e.s._core.graph.nodesIndex["" + a];
                    b.active = !1
                });
                var c = {};
                _.each(a, function (a) {
                    c[a] = 1;
                    var b = e.s._core.graph.nodesIndex[a];
                    b.active = !0
                }), e.s.iterEdges(function (b) {
                    (-1 != _.indexOf(a, b.source.id, !0) || -1 != _.indexOf(a, b.target.id, !0)) && (c[b.source.id] = 1, c[b.target.id] = 1)
                }).iterNodes(function (a) {
                    -1 == $.inArray(a.id, Object.keys(c)) || (a.active = !0)
                }), e.activeNodes = a, e.dispatchEvent("selectnodes", a)
            }
        }, this.selectNode = function (a, c) {
            b && console.log("selectNode"), e.resetFocusNode(), c || e.activeNodes.forEach(function (a) {
                e.s._core.graph.nodesIndex["" + a].active = !1
            });
            var d = e.s._core.graph.nodesIndex[a];
            d.active = !0;
            var f = {};
            f[a] = 1, c ? (e.activeNodes.forEach(function (a) {
                f[a] = 1
            }), e.activeNodes.push(a + ""), e.activeNodes = _.uniq(e.activeNodes.sort(), !0)) : e.activeNodes = [a + ""], e.s.iterEdges(function (b) {
                b.source.id == a || b.target.id == a ? (f[b.source.id] = 1, f[b.target.id] = 1) : c && e.isNodeActive(b.source.id) && e.isNodeActive(b.target.id) ? (f[b.source.id] = 1, f[b.target.id] = 1) : c && (e.isNodeActive(b.source.id) || e.isNodeActive(b.target.id)) && (f[b.source.id] = 1, f[b.target.id] = 1)
            }).iterNodes(function (a) {
                a.active = -1 == $.inArray(a.id, Object.keys(f)) ? !1 : !0
            }), e.s.draw(), c ? e.dispatchEvent("selectnodes", e.activeNodes) : e.dispatchEvent("selectnode", a)
        }, this.selectEdge = function (a) {
            b && console.log("selectEdge"), e.deselectNodes(), e.activeEdges = [a + ""];
            var c = e.getEdgeObject(a);
            c.active = !0, c.color = e.activeEdgeColor, e.s.draw(), e.dispatchEvent("selectedge", a)
        }, this.deselectEdge = function (a) {
            b && console.log("deselectEdge");
            var c = e.getEdgeObject(a);
            c.active = !1, c.color = e.defaultEdgeColor, e.activeEdges = _.without(e.activeEdges, a), e.s.draw(), e.dispatchEvent("deselectedge", a)
        }, this.deselectEdges = function () {
            b && console.log("deselectEdges"), e.s.iterEdges(function (a) {
                a.active = !1, a.color = e.defaultEdgeColor
            }), e.activeEdges = [], e.s.draw(), e.dispatchEvent("deselectedge")
        }, this.isNodeActive = function (a) {
            return-1 != $.inArray(a + "", e.activeNodes)
        }, this.isEdgeActive = function (a) {
            return-1 != $.inArray(a + "", e.activeEdges)
        }, this.deselectNode = function (c, d) {
            if (b && console.log("deselectNode"), e.isNodeActive(c)) {
                var f = e.getNodeObject(c);
                if (null === f || f === a) {
                    var g = e.activeNodes.indexOf(c + "");
                    return void e.activeNodes.splice(g, 1)
                }
                if (e.activeNodes.length && (d ? e.s._core.graph.nodesIndex[c].active = !1 : e.activeNodes.forEach(function (a) {
                    e.s._core.graph.nodesIndex[a].active = !1
                })), d) {
                    var g = e.activeNodes.indexOf(c + "");
                    e.activeNodes.splice(g, 1)
                } else e.activeNodes = [];
                if (e.activeNodes.length) {
                    var h = {};
                    e.s.iterEdges(function (a) {
                        d ? (e.isNodeActive(a.source.id) || e.isNodeActive(a.target.id)) && (h[a.source.id] = 1, h[a.target.id] = 1) : a.color = e.defaultEdgeColor
                    })
                }
                e.dispatchEvent("deselectnode", c)
            }
        }, this.deselectNodes = function () {
            b && console.log("deselectNodes"), e.activeNodes = [], e.s.iterNodes(function (a) {
                a.active = !1
            }), e.dispatchEvent("deselectnode")
        }, this.hoverNode = function (a) {
            b && console.log("hoverNode");
            var c = {};
            e.s.iterEdges(function (d) {
                (d.source.id == a || d.target.id == a) && (d.color = e.activeEdgeColor, c[d.source.id] = 1, c[d.target.id] = 1, b && console.log(d.color, e.activeEdgeColor))
            });
            var c = Object.keys(c);
            return e.s.iterNodes(function (a) {
                a.active = !1, _.contains(c, a.id) && (a.active = !0)
            }), e.s.draw(2, 1, 2), e
        }, this.outNode = function (a) {
            b && console.log("outNode");
            var c = _.contains(e.activeNodes, a);
            return e.s.iterEdges(function (a) {
                a.active = !1, a.color = e.defaultEdgeColor
            }).iterNodes(function (b) {
                b.active = c && a === b.id
            }), e.s.draw(2, 1, 2), e
        }, this.startLayout = function () {
            return e.startFALayout(), e
        }, this.stopLayout = function () {
            e.stopFALayout()
        }, this.toggleLayout = function () {
            return e.isLayoutRunning ? e.stopLayout() : e.startLayout(), e
        }, this.startFALayout = function () {
            !e.isLayoutRunning && e.getGraphSize() > 1 && (e.isLayoutRunning = !0, e.s.ForceAtlas = new sigma.forceatlas.ForceAtlas(e.s._core.graph, e.fixedNodes), e.s.ForceAtlas.init(), e.s.addGenerator("ForceAtlas", e.s.ForceAtlas.atomicGo, function () {
                return e.s.ForceAtlas.stop && (e.isLayoutRunning = !1, e.dispatchEvent("stoplayout")), !e.s.ForceAtlas.stop
            }), e.dispatchEvent("onlayout"))
        }, this.stopFALayout = function () {
            e.isLayoutRunning && (e.isLayoutRunning = !1, e.s.stopForceAtlas(), e.dispatchEvent("stoplayout"))
        }
    };
    "undefined" != typeof linkurious ? (linkurious.classes = linkurious.classes || Object.create(null), linkurious.classes.graph = c) : "undefined" != typeof exports ? ("undefined" != typeof module && module.exports && (exports = module.exports = c), exports.graph = c) : this.graph = c
}.call(this), function () {
    "use strict";
    if ("undefined" == typeof linkurious)throw"linkurious is not declared";
    linkurious.utils.pkg("linkurious.classes"), linkurious.classes.camera = function (a) {
        var b = this, c = a, d = document.getElementById(c.container), e = 1.382, f = .5;
        this.defaultZoomRatio = 24, this.zoomHome = function () {
            return c.centerView(), b
        }, this.zoomIn = function () {
            var a = c.s.position().ratio * e;
            return c.s.goTo(d.clientWidth / 2, d.clientHeight / 2, a), b
        }, this.zoomOut = function () {
            var a = c.s.position().ratio / e;
            return c.s.goTo(d.clientWidth / 2, d.clientHeight / 2, a), b
        }, this.moveUp = function () {
            var a = c.s.position().ratio;
            return c.s.zoomTo(d.clientWidth / 2, d.clientHeight / 2 + d.clientHeight / 2 * f, a), b
        }, this.moveDown = function () {
            var a = c.s.position().ratio;
            return c.s.zoomTo(d.clientWidth / 2, d.clientHeight / 2 - d.clientHeight / 2 * f, a), b
        }, this.moveLeft = function () {
            var a = c.s.position().ratio;
            return c.s.zoomTo(d.clientWidth / 2 + d.clientWidth / 2 * f, d.clientHeight / 2, a), b
        }, this.moveRight = function () {
            var a = c.s.position().ratio;
            return c.s.zoomTo(d.clientWidth / 2 - d.clientWidth / 2 * f, d.clientHeight / 2, a), b
        }, this.initZoom = function () {
            return c.s.goTo(d.clientWidth / 2, d.clientHeight / 2, b.defaultZoomRatio), b
        }, this.gotoNode = function (a) {
            var b = c.s._core.graph.nodesIndex[a];
            if (!b)throw"node not found:" + a;
            c.s.zoomTo(b.displayX, b.displayY, 1.00001 * c.s._core.mousecaptor.ratio).draw(2, 2, 2)
        }, this.centerView = function () {
            var a, d, e, f, g, h;
            c.s.iterNodes(function (b) {
                e = b.displayX, f = b.displayX, a = b.displayY, d = b.displayY
            }), c.s.iterNodes(function (b) {
                e = b.displayX < e ? b.displayX : e, f = b.displayX > f ? b.displayX : f, a = b.displayY > a ? b.displayY : a, d = b.displayY < d ? b.displayY : d
            }), g = (f + e) / 2, h = (a + d) / 2;
            for (var i = 0; 0 == i;)i = Math.random();
            return i /= 1e4, c.s.zoomTo(g, h, b.defaultZoomRatio + i).draw(), b
        }, this.centerViewOn = function (a) {
            if (0 != a.length) {
                var e, f, g, h, i, j, k, l = c.getNodeObject(a[0]);
                g = l.displayX, h = l.displayX, e = l.displayY, f = l.displayY, i = l.displaySize, _.each(a, function (a) {
                    var b = c.getNodeObject(a);
                    g = b.displayX < g ? b.displayX : g, h = b.displayX > h ? b.displayX : h, e = b.displayY > e ? b.displayY : e, f = b.displayY < f ? b.displayY : f
                }), j = (h + g) / 2, k = (e + f) / 2;
                var m = e - f + 3 * i, n = d.clientHeight, o = h - g + 3 * i, p = d.clientWidth, q = 400, r = 10, s = c.s._core.mousecaptor.ratio, t = 1, u = 1;
                return m > n && (t = n / (m + r)), o > p && (u = p / (o + q), j += q / 2), s *= Math.min(t, u), s = s > 24 ? s : 24, c.s.zoomTo(j, k, 1.00001 * s).draw(), b
            }
        }, this.centerViewOnActiveNodes = function () {
            return b.centerViewOn(c.activeNodes)
        }, this.centerViewOnFixedNodes = function () {
            return b.centerViewOn(c.fixedNodes)
        }, this.onGraphChange = function () {
            1 == c.getGraphSize() && c.s.iterNodes(function (a) {
                c.selectNode(a.id), b.centerViewOnActiveNodes()
            })
        }, c.bind("graphchange", this.onGraphChange)
    }
}.call(this), function () {
    "use strict";
    if ("undefined" == typeof linkurious)throw"linkurious is not declared";
    linkurious.utils.pkg("linkurious.misc"), linkurious.misc.bindEvents = function (a) {
        var b = a, c = function (a) {
            var c = a.content, d = c[0];
            b.selectNode(d)
        }, d = function (a) {
            var c = a.content, d = c[0];
            b.hoverNode(d)
        }, e = function (a) {
            var c = a.content, d = c[0];
            b.outNode(d)
        }, f = function (a) {
            var c = a.content, d = c[0];
            b.isNodeActive(d) ? b.deselectNode(d, !0) : b.selectNode(d, !0)
        }, g = function (a) {
            var c = a.content, d = c[0];
            b.deselectEdges(), b.selectEdge(d)
        }, h = function () {
            b.deselectNodes(), b.deselectEdges()
        };
        b.s.bind("downnodes", c).bind("overnodes", d).bind("outnodes", e).bind("ctrlclicknodes", f).bind("downedges", g).bind("rightclickgraph", h)
    }
}.call(this), function () {
    "use strict";
    if ("undefined" == typeof linkurious)throw"linkurious is not declared";
    linkurious.utils.pkg("linkurious.classes"), linkurious.classes.ui = function (a, b) {
        var c = a, d = b, e = new linkurious.utils.dom, f = new RegExp("^(/|(http|ftp|https)://)"), g = new RegExp(".(jpg|png|bmp|jpeg|tiff|gif)$");
        e.click("#zoomin-btn", d.zoomIn), e.click("#zoomout-btn", d.zoomOut), function () {
            c.s.bind(" dblclicknodes", function (a) {
                a.content;
                _.each(c.activeNodes, function () {
                })
            })
        }(), function () {
            function a(a, b) {
                var c = [], d = 0;
                return _.each(b, function (a, b) {
                    if ("object" != typeof a || _.isArray(a)) {
                        var e = a;
                        if (f.test(a)) {
                            if (g.test(a))e = '<a href="' + _.escape(a) + '" target="_blank" title="Open in a new tab"><img src="' + _.escape(a) + '" /></a>'; else {
                                var h = e.replace(/(http|ftp|https):\/\/(\w\w\w\.|)/i, "");
                                h = h.length > 27 ? h.substr(0, 17) + "..." + h.substr(-10) : h, e = '<a href="' + _.escape(a) + '" target="_blank" title="Open in a new tab">' + _.escape(h) + "</a>"
                            }
                            c[d++] = "<tr><td>" + _.escape(b) + "</td><td>" + e + "</td></tr>"
                        } else if ("db_relationships" == b && _.isArray(a)) {
                            var i = 0, j = _.countBy(a, function (a) {
                                return i++, a.type
                            });
                            c[d++] = "<tr><td>" + i + " Total Connections</td></tr>", _.each(j, function (a, b) {
                                c[d++] = "<tr><td>" + a + "</td><td>" + _.escape(b) + "</td></tr>"
                            })
                        } else c[d++] = "<tr><td>" + _.escape(b) + "</td><td>" + _.escape(e) + "</td></tr>"
                    } else {
                        var k = '<table class="table table-hover"><tbody>', l = [], m = 0;
                        _.each(a, function (a, b) {
                            l[m++] = '<tr><td style="border:0;padding:0">' + _.escape(b) + '</td><td style="border:0;padding:0">' + _.escape(a) + "</td></tr>"
                        }), k += l.join("") + "</tbody></table>", c[d++] = "<tr><td>" + _.escape(b) + "</td><td>" + k + "</td></tr>"
                    }
                }), '<table class="table table-hover"><tbody>' + c.join("") + "</tbody></table>"
            }

            function b(b) {
                h && h.remove();
                var d = b.content[0], e = c.getNodeObject(d);
                c.setFocusNode(d);
                var f = "node-info" + c.s.getID();
                h = $('<div class="viz-popup node-info-popup"></div>').append('<div id="node-ctx-popup-header" class="popup-header">' + e.label + '</div><div id="node-ctx-popup-body" class="popup-body">' + a(e.id, e.attr) + "</div>").attr("id", f).css({left: e.displayX, top: e.displayY}), $("body").append(h);
                var g = $("#" + f), i = g.offset();
                null != i && (g.css("left", e.displayX + g.width()), g.css("top", e.displayY + g.height() / 2))
            }

            function d(b) {
                h && h.remove();
                var d = b.content[0], e = c.getEdgeObject(d), f = "edge-info" + c.s.getID();
                h = $('<div class="viz-popup edge-info-popup"></div>').append('<div id="edge-ctx-popup-header" class="popup-header">' + e.source.label + " ... " + e.target.label + '</div><div id="edge-ctx-popup-body" class="popup-body">' + a(e.id, e.attr) + "</div>").attr("id", f).css({left: c.s._core.mousecaptor.mouseX, top: c.s._core.mousecaptor.mouseY}), $("body").append(h);
                var g = $("#" + f), i = g.offset();
                null != i && (g.css("left", c.s._core.mousecaptor.mouseX + g.width() / 2), g.css("top", c.s._core.mousecaptor.mouseY + g.height() / 2))
            }

            function e() {
                h && h.remove(), h = !1
            }

            var h, i = {}, j = {};
            c.s.bind("overnodes",function (a) {
                var d = a.content, e = d[0];
                if (!(e in i)) {
                    var f = setTimeout(function () {
                        b(a)
                    }, 800);
                    i[e] = f
                }
                $(c.container).addClass("nodehovered")
            }).bind("outnodes",function (a) {
                var b = a.content;
                _.each(b, function (a) {
                    clearTimeout(i[a]), delete i[a], e()
                }), $(c.container).removeClass("nodehovered")
            }).bind("overedges",function (a) {
                var b = a.content, e = b[0];
                if (!(e in j)) {
                    var f = setTimeout(function () {
                        d(a)
                    }, 1200);
                    j[e] = f
                }
                $(c.container).addClass("edgehovered")
            }).bind("outedges",function (a) {
                var b = a.content;
                _.each(b, function (a) {
                    clearTimeout(j[a]), delete j[a], e()
                }), $(c.container).removeClass("edgehovered")
            }).bind("rightclicknodes", b).bind("rightclickedges", d).bind("rightclickgraph", e).bind("downgraph", e).draw(), $("body").on("contextmenu", function () {
                return!1
            })
        }()
    }
}.call(this);
